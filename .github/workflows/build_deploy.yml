name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:

  build-ingestion-image:

    # Builds the images, test the code, and push the image to AWS ECR repository.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build and tag Image
        run: |
          docker build -t ${{steps.login-ecr.outputs.registry}}/ingestion-image:latest ./ingestion

      - name: Push Image to ECR
        run: |
         docker push ${{steps.login-ecr.outputs.registry}}/ingestion-image:latest

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}      

  build-dbt-image:

    # Builds the images, test the code, and push the image to AWS ECR repository.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build and tag Image
        run: |
          docker build -t ${{steps.login-ecr.outputs.registry}}/dbt-image:latest ./transformation_dbt

      - name: Push Image to ECR
        run: |
         docker push ${{steps.login-ecr.outputs.registry}}/dbt-image:latest

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}        

  
  deploy-dags:
    runs-on: ubuntu-latest
    needs: [build-ingestion-image, build-dbt-image]
    steps:

      - name: checkout repo content
        uses: actions/checkout@v4

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'
          
      - name: install python packages 
        run: |
          python -m pip install --upgrade pip
          pip install boto3
          
      - name: execute py script
        env:
          AWS_DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        run: python scripts/deploy_dags.py